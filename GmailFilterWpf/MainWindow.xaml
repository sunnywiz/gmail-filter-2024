<Window x:Class="GmailFilterWpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GmailFilterWpf"
        mc:Ignorable="d"
        Title="MainWindow" Height="800" Width="1000"
        >
    <Window.Resources>
        <local:DebuggerConverter x:Key="DebuggerConverter" />
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <DockPanel Grid.Row="0">
            <GroupBox Header="Setup stuff (lots of stuff is Hardcoded)">
                <FlowDocumentScrollViewer>
                    <FlowDocument PagePadding="0">
                        <Paragraph>
                            Using gmail api- you must have registered your email as a tester.  using credentials from
                            <TextBlock Name="CredentialsFileText" Text="credentials.json" Background="LightGray"/>
                            and saving any user tokens to the folder
                            <TextBlock Name="TokenFolderText" Text="tokens" Background="LightGray"/>
                            <LineBreak/>
                            Email Local Store at
                            <TextBlock Name="EmailLocalStoreText" Text="emailstore.json" Background="LightGray"/>
                            has
                            <TextBlock Name="EmailCountText" Text="??" Background="LightGray"/>
                            emails between
                            <TextBlock Name="EmailEarliestText" Text="??" Background="LightGray"/>
                            and
                            <TextBlock Name="EmailLatestText" Text="??" Background="LightGray"/>
                            <LineBreak/>
                            Rule Local Store at 
                            <TextBlock Name="RuleLocalStoreText" Text="rulestore.json" Background="LightGray"/> holds any rules we want to remember.
                            <LineBreak/>
                            On connect, get the last
                            <TextBox Name="DaysToLoadText" Text="1" MinWidth="30" Background="Yellow"/>
                            days of emails. Its about half a second per email that needs detail. 
                            <Button Name="GetEmailsButton" Click="GetEmails_Click">Get More Emails</Button>
                        </Paragraph>
                    </FlowDocument>
                </FlowDocumentScrollViewer>
            </GroupBox>
        </DockPanel>
        <DockPanel Grid.Row="1">
            <FlowDocumentScrollViewer DockPanel.Dock="Bottom" Margin="0" Padding="0" >
                <FlowDocument PagePadding="0">
                    <Paragraph>
                        Once the results are loaded, you can
                        <Button>TODO:Apply All Filters</Button> or 
                        <Button Name="SendDeletesButton" Click="SendDeletesButton_OnClick">Send Deletes</Button> 
                    </Paragraph>
                </FlowDocument>
            </FlowDocumentScrollViewer>
            <DataGrid  Name="ResultGrid" 
                       AutoGenerateColumns="False"
                       IsReadOnly="true"
                       RowDetailsVisibilityMode="VisibleWhenSelected">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="From" Binding="{Binding From}" />
                    <DataGridTextColumn Header="Count" Binding="{Binding Count}"/>
                    <DataGridTextColumn Header="MinDate" Binding="{Binding MinDate}"/>
                    <DataGridTextColumn Header="MaxDate" Binding="{Binding MaxDate}"/>
                    <DataGridTextColumn Header="Frequency" Binding="{Binding Frequency, StringFormat={}{0:F2}}"/>
                    <!-- DataGridTextColumn Header="Num To Keep" Binding="{Binding NumToKeep}"/ -->
                </DataGrid.Columns>
                <DataGrid.RowDetailsTemplate>
                    <DataTemplate>
                        <DockPanel>
                            <WrapPanel DockPanel.Dock="Top">
                                <Label>NumToKeep: </Label>
                                <TextBox Text="{Binding 
                                    Path=NumToKeep, 
                                    Mode=TwoWay, 
                                    UpdateSourceTrigger=PropertyChanged
                                    }" MinWidth="20"></TextBox>
                                <Label>(blank means keep all)</Label>
                                <Button Click="PruneNowButton_OnClick">Prune Now</Button>
                                <Label Margin="20 0 0 0 ">Remember This:</Label>
                                <CheckBox Name="RememberPruneSettingCheckbox" 
                                          IsChecked="{Binding 
                                    Path=RememberPruneSetting,
                                    Mode=TwoWay,
                                    UpdateSourceTrigger=PropertyChanged}"
                                          Checked="RememberPruneSetting_Checked"/>
                            </WrapPanel>
                            <DataGrid ItemsSource="{Binding Emails}" IsReadOnly="True" AutoGenerateColumns="false" MaxHeight="200">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Id" Binding="{Binding Id}"/>
                                <DataGridTextColumn Header="Subject" Binding="{Binding Subject}"/>
                                <DataGridTextColumn Header="Date" Binding="{Binding Date}"/>
                                <DataGridTextColumn Header="Delete" Binding="{Binding DeleteState}"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        </DockPanel>
                    </DataTemplate>
                </DataGrid.RowDetailsTemplate>
            </DataGrid>
        </DockPanel>
        <TextBlock Grid.Row="2" Name="StatusText" Text="Updates go here" Foreground="Gray"/>
    </Grid>
</Window>
