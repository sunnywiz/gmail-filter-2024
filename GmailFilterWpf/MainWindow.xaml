<Window x:Class="GmailFilterWpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GmailFilterWpf"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <DockPanel Grid.Row="0">
            <Button DockPanel.Dock="Right" Name="ConnectButton" Click="ConnectButton_OnClick">Connect</Button>
            <GroupBox Header="Setup stuff (lots of stuff is Hardcoded)">
                <FlowDocumentScrollViewer>
                    <FlowDocument PagePadding="0">
                        <Paragraph>
                            Using gmail api- you must have registered your email as a tester.  using credentials from
                            <TextBlock Name="CredentialsFileText" Text="credentials.json" Background="LightGray"/>
                            and saving token to
                            <TextBlock Name="TokenFileText" Text="token.json" Background="LightGray"/> .
                            <LineBreak/>
                            Local Store at
                            <TextBlock Name="LocalStoreText" Text="emailstore.json" Background="LightGray"/>
                            has
                            <TextBlock Name="EmailCountText" Text="??" Background="LightGray"/>
                            emails between
                            <TextBlock Name="EmailEarliestText" Text="??" Background="LightGray"/>
                            and
                            <TextBlock Name="EmailLatestText" Text="??" Background="LightGray"/>
                            <LineBreak/>
                            On connect, get the last
                            <TextBox Name="DaysToLoadText" Text="1" Background="Yellow"/>
                            days of emails.
                        </Paragraph>
                    </FlowDocument>
                </FlowDocumentScrollViewer>
            </GroupBox>
        </DockPanel>
        <DockPanel Grid.Row="1">
            <FlowDocumentScrollViewer DockPanel.Dock="Bottom" Margin="0" Padding="0" >
                <FlowDocument PagePadding="0">
                    <Paragraph>
                        Once the results are loaded, you can
                        <Button>TODO:Apply Filters</Button> ,
                        <Button>TODO:Save Deletes</Button> , 
                    and
                        <Button Name="SaveLocalCacheButton" Click="SaveLocalCacheButton_OnClick">Save Local Cache</Button>
                    </Paragraph>
                </FlowDocument>
            </FlowDocumentScrollViewer>
            <DataGrid  Name="ResultGrid" 
                       AutoGenerateColumns="False"
                       IsReadOnly="false"
                       RowDetailsVisibilityMode="VisibleWhenSelected">
                <DataGrid.Columns>
                    <DataGridTextColumn IsReadOnly="True" Header="From" Binding="{Binding From}" />
                    <DataGridTextColumn IsReadOnly="True" Header="Count" Binding="{Binding Count}"/>
                    <DataGridTextColumn IsReadOnly="True" Header="MinDate" Binding="{Binding MinDate}"/>
                    <DataGridTextColumn IsReadOnly="True" Header="MaxDate" Binding="{Binding MaxDate}"/>
                    <DataGridTextColumn IsReadOnly="True" Header="Frequency" Binding="{Binding Frequency, StringFormat={}{0:F2}}"/>
                    <DataGridTextColumn Header="Num To Keep" Binding="{Binding NumToKeep}"/>
                    <DataGridCheckBoxColumn Header="Mark Read" Binding="{Binding MarkAsRead}" IsThreeState="False"/>
                </DataGrid.Columns>
                <DataGrid.RowDetailsTemplate>
                    <DataTemplate>
                        <DockPanel>
                            <Button DockPanel.Dock="Left" Name="PruneButton" Click="PruneButton_OnClick">Prune!</Button>
                            <Button DockPanel.Dock="Left" Name="RememberButton" Click="RememberButton_OnClick">Remember</Button>
                            <DataGrid ItemsSource="{Binding Emails}" IsReadOnly="True" AutoGenerateColumns="false" MaxHeight="200">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Id" Binding="{Binding Id}"/>
                                <DataGridTextColumn Header="Subject" Binding="{Binding Subject}"/>
                                <DataGridTextColumn Header="Date" Binding="{Binding Date}"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        </DockPanel>
                    </DataTemplate>
                </DataGrid.RowDetailsTemplate>
            </DataGrid>
        </DockPanel>
        <TextBlock Grid.Row="2" Name="StatusText" Text="Updates go here" Foreground="Gray"/>
    </Grid>
</Window>
